{"version":3,"sources":["geojson sync /^/.*/.geo/.json$","hooks/useResizeObserver.js","components/GeoChart.js","images/twitter-logo.png","components/MapBox.js","components/maps/ComboChart/ComboChart.js","components/maps/GaugeChart/GaugeChart.js","components/maps/PieChart/PieChart.js","components/maps/LineChartJs/LineChart2.js","components/maps/LineChartJs/LineChart3.js","images/india_vegetation.gif","components/IndiaVegetation.js","images/india_climate.gif","components/IndiaClimate.js","components/maps/ComboChart/ComboChart2.js","components/maps/BarChart/Top5BarChart.js","components/maps/BarChart/Bottom5BarChart.js","pages/MapPage.js","components/NavBar/NavBar.js","images/gujarat_climate.gif","components/gifMaps/GujaratClimate.js","images/gujarat_vegetation.gif","components/gifMaps/GujaratVegetation.js","images/tamil_nadu_vegetation.gif","components/gifMaps/TamilNaduVegetation.js","images/himachal_pradesh_climate.gif","components/gifMaps/HimachalPradeshClimate.js","images/tamil_nadu_climate.gif","components/gifMaps/TamilNaduClimate.js","images/himachal_pradesh_vegetation.gif","components/gifMaps/HimachalPradeshVegetation.js","pages/StatesPage.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","GeoChart","data","svgRef","property","useRef","wrapperRef","selectedState","navigate","useNavigate","svg","select","getBoundingClientRect","width","height","projection","geoMercator","fitSize","precision","pathGenerator","geoPath","selectAll","features","join","on","event","feature","console","log","properties","attr","transition","duration","style","paddingTop","className","mapboxgl","require","MapBox","area","AreaToUrlMap","url","india","gujarat","accessToken","Map","container","center","zoom","minZoom","layers","getStyle","layer","addSource","type","addLayer","source","loadMap","ComboChart","comboChartData","overflowY","length","chartType","loader","display","alignItems","justifyContent","Spinner","animation","variant","options","title","vAxis","viewWindowMode","viewWindow","min","hAxis","seriesType","series","backgroundColor","chartArea","legend","position","rootProps","GaugeChart","aqiParams","aqiArr","selectedAqiParam","setSelectedAqiParam","selectedIndex","setSelectedIndex","flexDirection","overflow","value","onChange","target","val","idx","year","redFrom","redTo","yellowFrom","yellowTo","minorTicks","max","PieChart","forestDataObject","calculate","slices","color","pieSliceTextStyle","LineChart2","rainfall","LineChart3","dataApi","forestData","forestCover","years","curveType","IndiaVegetation","src","logo","alt","IndiaClimate","ComboChart2","isStacked","Top5BarChart","bar","groupWidth","minValue","Bottom5BarChart","hostedUrl","MapPage","setDataApi","setYears","setForestCover","setForestData","forestDataArray","setForestDataArray","setRainfall","setAqiParams","setAqiArr","setComboChartData","comboChartData2","setComboChartData2","top5","setTop5","bottom5","setBottom5","topBottomParam","setTopBottomParam","topBottomYear","setTopBottomYear","stateApi","setStateApi","tweetNRating","setTweetNRating","comboData2Year","setComboData2Year","inputYear","setInputYear","inputArea","setInputArea","predictedResult","setPredictedResult","hashtag","setHashtag","view","setView","fetchData","a","fetch","headers","response","json","Data","item","annualRainfall","filter","forestObj","TFC","VDC","MDC","MFC","OFA","SLA","forestArr","aqiVal","SO2","NO2","RSPM","SPM","PM25","aqiValArr","comboData","stateData","formData","FormData","append","method","body","updateStackedData","stateComboData","state","param","sortData","sortedData","sort","b","slice","getTweetRating","Fragment","Container","fluid","Row","Col","end","delay","for","placeholder","onClick","preventDefault","then","res","xs","lg","padding","Card","bg","border","Body","Title","paddingBottom","marginBottom","margin","marginTop","textAlign","fontSize","fontWeight","Form","Control","size","marginRight","Button","ListGroup","as","tweet","Item","NavBar","Navbar","sticky","GujaratClimate","GujaratVegetation","TamilNaduVegetation","HimachalPradeshClimate","TamilNaduClimate","HimachalPradeshVegetation","StatesPage","params","useParams","toLowerCase","split","s","charAt","toUpperCase","substring","App","path","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27683c4e.chunk.js","sourcesContent":["var map = {\n\t\"./gujarat.geo.json\": 156,\n\t\"./himachal pradesh.geo.json\": 157,\n\t\"./tamil nadu.geo.json\": 158\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 155;","import { useEffect, useState } from 'react';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\n/**\r\n * Hook, that returns the current dimensions of an HTML element.\r\n * Doesn't play well with SVG.\r\n */\r\n\r\nconst useResizeObserver = (ref) => {\r\n  const [dimensions, setDimensions] = useState(null);\r\n  useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        setDimensions(entry.contentRect);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n\r\nexport default useResizeObserver;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { select, geoPath, geoMercator } from 'd3';\r\nimport useResizeObserver from '../hooks/useResizeObserver';\r\n// import { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction GeoChart({ data, property }) {\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n\r\n    const { width, height } =\r\n      dimensions || wrapperRef.current.getBoundingClientRect();\r\n\r\n    const projection = geoMercator()\r\n      .fitSize([width, height], selectedState || data)\r\n      .precision(100);\r\n\r\n    const pathGenerator = geoPath().projection(projection);\r\n\r\n    svg\r\n      .selectAll('.state')\r\n      .data(data.features)\r\n      .join('path')\r\n      .on('click', (event, feature) => {\r\n        console.log(feature.properties['NAME_1']);\r\n        // setSelectedState(selectedState === feature ? null : feature);\r\n        navigate(`/${feature.properties['NAME_1']}`);\r\n      })\r\n      .attr('class', 'state')\r\n      .attr('fill', '#add8e6')\r\n      // .attr('fill-outline-color', 'rgba(250,180,195,1)')\r\n      .attr('transform', 'scale(.98)')\r\n      .transition()\r\n      .duration(2000)\r\n      .attr('d', (feature) => pathGenerator(feature));\r\n  }, [data, dimensions, selectedState, navigate]);\r\n\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      style={{ width: '100%', height: '100%', paddingTop: '5px' }}\r\n      className='d-block w-100'\r\n    >\r\n      <svg ref={svgRef}></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GeoChart;\r\n","export default __webpack_public_path__ + \"static/media/twitter-logo.57573394.png\";","import React, { useEffect } from 'react';\r\n\r\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\r\n\r\nfunction MapBox({ area = 'india', url = 'aavaig2069.3d85qak1' }) {\r\n  const AreaToUrlMap = {\r\n    india: 'aavaig2069.3d85qak1',\r\n    'himachal pradesh': 'aavaig2069.cf5xtz0n',\r\n    gujarat: 'aavaig2069.32bs6f7z',\r\n    'tamil nadu': 'aavaig2069.8ty6aufg',\r\n  };\r\n\r\n  const loadMap = () => {\r\n    mapboxgl.accessToken =\r\n      'pk.eyJ1IjoiYWF2YWlnMjA2OSIsImEiOiJja3gyNjhkdG0xOTljMnBueTluZnA0YzFzIn0.eZB9Au7ertDodRUyEVQHZQ';\r\n    var map = new mapboxgl.Map({\r\n      container: 'mapbox-map',\r\n      style: 'mapbox://styles/mapbox/satellite-v9',\r\n      // style: 'mapbox://styles/mapbox/light-v10',\r\n      center: [78.9629, 20.5937],\r\n      zoom: 3.5,\r\n      minZoom: 3,\r\n    });\r\n\r\n    map.on('load', () => {\r\n      const layers = map.getStyle().layers;\r\n\r\n      let firstSymbolId;\r\n      for (const layer of layers) {\r\n        if (layer === 'symbol') {\r\n          firstSymbolId = layer.id;\r\n          break;\r\n        }\r\n      }\r\n\r\n      map.addSource('drone', {\r\n        type: 'raster',\r\n        url: `mapbox://${AreaToUrlMap[area]}`,\r\n      });\r\n\r\n      map.addLayer({\r\n        id: 'drone-layer',\r\n        type: 'raster',\r\n        source: 'drone',\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMap();\r\n  }, []);\r\n\r\n  //   return <div id='mapbox-map'></div>;\r\n  return (\r\n    <div id='mapbox-map' style={{ height: '100%' }}>\r\n      Mapbox\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapBox;\r\n","import { Chart } from 'react-google-charts';\r\nimport React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction ComboChart({ comboChartData }) {\r\n  return (\r\n    <div style={{ overflowY: 'hidden', height: '80%' }}>\r\n      {comboChartData.length !== 0 && (\r\n        <Chart\r\n          width={'100%'}\r\n          height={'100%'}\r\n          chartType='ComboChart'\r\n          loader={\r\n            <>\r\n              <div\r\n                className='spinner'\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  height: '100%',\r\n                }}\r\n              >\r\n                <Spinner animation='border' variant='primary' />\r\n              </div>\r\n            </>\r\n          }\r\n          data={[['Year', 'TFC', 'AR', 'SPM'], ...comboChartData]}\r\n          options={{\r\n            title: 'Relation b/w TFC, AR, SPM',\r\n            vAxis: {\r\n              title: 'Annual Data',\r\n              viewWindowMode: 'explicit',\r\n              viewWindow: { min: 0 },\r\n            },\r\n            hAxis: { title: 'Year' },\r\n            seriesType: 'bars',\r\n            // series: { 5: { type: 'line' }, 3: { type: 'line' } },\r\n            //   series: {  },\r\n            series: { 1: { type: 'line' }, 2: { type: 'line' } },\r\n            backgroundColor: 'transparent',\r\n            chartArea: {\r\n              width: '70%',\r\n              height: '73%',\r\n            },\r\n            legend: {\r\n              position: 'bottom',\r\n            },\r\n          }}\r\n          rootProps={{ 'data-testid': '1' }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComboChart;\r\n","import React, { useState } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { Chart } from 'react-google-charts';\r\nimport '../../../App.css';\r\n\r\nfunction GaugeChart({ aqiParams, aqiArr }) {\r\n  // const [selectedYear, setSelectedYear] = useState(2015);\r\n\r\n  const [selectedAqiParam, setSelectedAqiParam] = useState('SO2');\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden',\r\n        // height: '100%',\r\n      }}\r\n      className='gauge-chart'\r\n    >\r\n      {aqiArr.length !== 0 && (\r\n        <>\r\n          <div\r\n            className='aqi-param-selector'\r\n            style={{ display: 'flex', justifyContent: 'space-between' }}\r\n          >\r\n            <div className='param-selector'>\r\n              <select\r\n                value={selectedAqiParam}\r\n                onChange={(e) => {\r\n                  setSelectedAqiParam(e.target.value);\r\n                }}\r\n              >\r\n                <option value='SO2'>SO2</option>\r\n                <option value='NO2'>NO2</option>\r\n                <option value='RSPM'>RSPM</option>\r\n                <option value='SPM'>SPM</option>\r\n                <option value='PM25'>PM25</option>\r\n              </select>\r\n            </div>\r\n\r\n            <h3 className='title'>AQI Meter</h3>\r\n            <div className='year-selector'>\r\n              <select\r\n                onChange={(e) => {\r\n                  console.log(\r\n                    aqiArr[e.target.value][selectedAqiParam],\r\n                    +e.target.value\r\n                  );\r\n                  setSelectedIndex(+e.target.value);\r\n                }}\r\n              >\r\n                {aqiArr.map((val, idx) => (\r\n                  <option value={idx}>{aqiArr[idx].year}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <Chart\r\n            // width={'100%'}\r\n            // height={'100%'}\r\n            chartType='Gauge'\r\n            loader={\r\n              <>\r\n                <div\r\n                  className='spinner'\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    height: '100%',\r\n                  }}\r\n                >\r\n                  <Spinner animation='border' variant='primary' />\r\n                </div>\r\n              </>\r\n            }\r\n            data={[\r\n              ['AQI Param', '%Value'],\r\n              [\r\n                selectedAqiParam,\r\n                aqiArr[selectedIndex][selectedAqiParam] / 100000,\r\n              ],\r\n            ]}\r\n            options={{\r\n              title: 'Air Quality Meter',\r\n              redFrom: 20,\r\n              redTo: 30,\r\n              yellowFrom: 10,\r\n              yellowTo: 20,\r\n              minorTicks: 10,\r\n              max: 30,\r\n              chartArea: {\r\n                width: '60%',\r\n                height: '60%',\r\n              },\r\n            }}\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GaugeChart;\r\n","import React, { useState } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction PieChart({ forestDataObject }) {\r\n  const [selectedYear, setSelectedYear] = useState(2019);\r\n  const [selectedIndex, setSelectedIndex] = useState(16);\r\n\r\n  const calculate = (val) => (val / 3287469) * 100;\r\n\r\n  return (\r\n    <div style={{ overflow: 'hidden' }}>\r\n      {forestDataObject.length !== 0 && (\r\n        <>\r\n          <div className='forest-data-selector'>\r\n            <select\r\n              value={selectedIndex}\r\n              onChange={(e) => {\r\n                console.log(e.target.value);\r\n                setSelectedIndex(e.target.value);\r\n              }}\r\n            >\r\n              {forestDataObject.map((val, idx) => (\r\n                <option value={idx}>{forestDataObject[idx].year}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <Chart\r\n            // width={'100%'}\r\n            // height={'100%'}\r\n            chartType='PieChart'\r\n            loader={\r\n              <>\r\n                <div\r\n                  className='spinner'\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    height: '100%',\r\n                  }}\r\n                >\r\n                  <Spinner animation='border' variant='primary' />\r\n                </div>\r\n              </>\r\n            }\r\n            data={[\r\n              ['Forest Cover', '%Cover'],\r\n              ['VDC', calculate(forestDataObject[selectedIndex]['VDC'])],\r\n              ['MDC', calculate(forestDataObject[selectedIndex]['MDC'])],\r\n              ['MFC', calculate(forestDataObject[selectedIndex]['MFC'])],\r\n              ['OFA', calculate(forestDataObject[selectedIndex]['OFA'])],\r\n              ['SLA', calculate(forestDataObject[selectedIndex]['SLA'])],\r\n            ]}\r\n            options={{\r\n              // title: 'Forest Cover of 2019',\r\n              // Just add this option\r\n              title: 'Distribution of Types of Land Cover',\r\n              // legend: 'non',\r\n              //   is3D: true,\r\n              slices: {\r\n                0: { color: '#FEBA69' },\r\n                1: { color: '#FF718B' },\r\n                2: { color: '#999' },\r\n                3: { color: '#8675FF' },\r\n                4: { color: '#69FFBB' },\r\n              },\r\n              pieSliceTextStyle: {\r\n                color: 'black',\r\n              },\r\n              backgroundColor: 'transparent',\r\n              chartArea: {\r\n                width: '60%',\r\n                height: '60%',\r\n              },\r\n              legend: {\r\n                position: 'bottom',\r\n              },\r\n            }}\r\n            rootProps={{ 'data-testid': '2' }}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction LineChart2({ rainfall }) {\r\n  return (\r\n    <div>\r\n      {rainfall.length !== 0 && (\r\n        <Chart\r\n          // width={'100%'}\r\n          // height={'100%'}\r\n          chartType='LineChart'\r\n          loader={\r\n            <>\r\n              <div\r\n                className='spinner'\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  height: '100%',\r\n                }}\r\n              >\r\n                <Spinner animation='border' variant='primary' />\r\n              </div>\r\n            </>\r\n          }\r\n          data={[['Year', 'Annual Rainfall'], ...rainfall]}\r\n          options={{\r\n            title: 'Annual Rainfall Trendline',\r\n            hAxis: {\r\n              title: 'Time',\r\n            },\r\n            vAxis: {\r\n              title: 'Annual Rainfall',\r\n            },\r\n            backgroundColor: 'transparent',\r\n            chartArea: {\r\n              width: '70%',\r\n              height: '60%',\r\n            },\r\n            legend: {\r\n              position: 'bottom',\r\n            },\r\n          }}\r\n          rootProps={{ 'data-testid': '1' }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineChart2;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction LineChart3({ dataApi, forestCover, years, forestData }) {\r\n  return (\r\n    <div style={{ overflow: 'hidden', height: '100%' }}>\r\n      {dataApi.length !== 0 && (\r\n        <Chart\r\n          width={'100%'}\r\n          height={'100%'}\r\n          chartType='LineChart'\r\n          loader={\r\n            <>\r\n              <div\r\n                className='spinner'\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  height: '100%',\r\n                }}\r\n              >\r\n                <Spinner animation='border' variant='primary' />\r\n              </div>\r\n            </>\r\n          }\r\n          data={[\r\n            ['years', 'TFC', 'VDC', 'MDC', 'MFC', 'OFA', 'SLA'],\r\n\r\n            ...forestData,\r\n          ]}\r\n          options={{\r\n            title: 'Types of Land Cover : TrendLine',\r\n            hAxis: {\r\n              title: 'Year',\r\n            },\r\n            vAxis: {\r\n              title: 'Forest Area (in sq. km.)',\r\n              viewWindowMode: 'explicit',\r\n              viewWindow: { min: 0 },\r\n            },\r\n            series: {\r\n              1: { curveType: 'function' },\r\n            },\r\n            backgroundColor: 'transparent',\r\n            chartArea: {\r\n              width: '80%',\r\n              height: '60%',\r\n            },\r\n            legend: {\r\n              position: 'bottom',\r\n            },\r\n          }}\r\n          rootProps={{ 'data-testid': '2' }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineChart3;\r\n","export default __webpack_public_path__ + \"static/media/india_vegetation.9c85eaf7.gif\";","import React from 'react';\r\nimport logo from '../images/india_vegetation.gif';\r\n\r\nfunction IndiaVegetation({ area = 'india' }) {\r\n  //   let logo = require('/images/india_vegetation.gif');\r\n\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      <img\r\n        src={logo}\r\n        alt='india vegetation'\r\n        style={{ width: '100%', height: '100%' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndiaVegetation;\r\n","export default __webpack_public_path__ + \"static/media/india_climate.7902d08d.gif\";","import React from 'react';\r\nimport logo from '../images/india_climate.gif';\r\n\r\nfunction IndiaClimate() {\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      <img\r\n        src={logo}\r\n        alt='india climate'\r\n        style={{ height: '100%', width: '100%' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndiaClimate;\r\n","import { Chart } from 'react-google-charts';\r\nimport React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction ComboChart2({ comboChartData }) {\r\n  return (\r\n    <div style={{ overflow: 'hidden', height: '100%' }}>\r\n      {comboChartData.length !== 0 && (\r\n        <Chart\r\n          width={'100%'}\r\n          height={'100%'}\r\n          chartType='ComboChart'\r\n          loader={\r\n            <>\r\n              <div\r\n                className='spinner'\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  height: '100%',\r\n                }}\r\n              >\r\n                <Spinner animation='border' variant='primary' />\r\n              </div>\r\n            </>\r\n          }\r\n          data={[['State', 'TFC', 'AR', 'SO2', 'DTFC'], ...comboChartData]}\r\n          options={{\r\n            title: 'Relation b/w Total Forest Cover, AR, SO2 & DTFC',\r\n            vAxis: {\r\n              title: 'Annual Data',\r\n              viewWindowMode: 'explicit',\r\n              viewWindow: { min: 0 },\r\n            },\r\n            hAxis: { title: 'State' },\r\n            seriesType: 'bars',\r\n            // series: { 5: { type: 'line' }, 3: { type: 'line' } },\r\n            //   series: {  },\r\n            series: { 3: { type: 'line' } },\r\n            backgroundColor: 'transparent',\r\n            chartArea: {\r\n              width: '80%',\r\n              height: '68%',\r\n            },\r\n            legend: {\r\n              position: 'right',\r\n            },\r\n            isStacked: 'true',\r\n          }}\r\n          rootProps={{ 'data-testid': '1' }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComboChart2;\r\n","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction Top5BarChart({ data, title }) {\r\n  return (\r\n    <div style={{ overflow: 'hidden', height: '100%' }}>\r\n      {data.length !== 0 && (\r\n        <Chart\r\n          width={'100%'}\r\n          height={'100%'}\r\n          chartType='BarChart'\r\n          loader={<div>Loading Chart</div>}\r\n          data={[['State', 'Value'], ...data]}\r\n          options={{\r\n            title: `Top 5 ${title}`,\r\n            //   width: 600,\r\n            //   height: 400,\r\n            bar: { groupWidth: '95%' },\r\n            legend: { position: 'none' },\r\n            chartArea: {\r\n              width: '80%',\r\n              height: '70%',\r\n            },\r\n            hAxis: {\r\n              minValue: 0,\r\n            },\r\n          }}\r\n          // For tests\r\n          rootProps={{ 'data-testid': '6' }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Top5BarChart;\r\n","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nfunction Bottom5BarChart({ data, title }) {\r\n  return (\r\n    <div style={{ overflow: 'hidden', height: '100%' }}>\r\n      {data.length !== 0 && (\r\n        <Chart\r\n          width={'100%'}\r\n          height={'100%'}\r\n          chartType='BarChart'\r\n          loader={<div>Loading Chart</div>}\r\n          data={[['State', 'Value'], ...data]}\r\n          options={{\r\n            title: `Bottom 5 ${title}`,\r\n            //   width: 600,\r\n            //   height: 400,\r\n            bar: { groupWidth: '95%' },\r\n            legend: { position: 'none' },\r\n            chartArea: {\r\n              width: '80%',\r\n              height: '70%',\r\n            },\r\n            hAxis: {\r\n              minValue: 0,\r\n            },\r\n          }}\r\n          // For tests\r\n          rootProps={{ 'data-testid': '6' }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bottom5BarChart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport data from '../india.min.geo.json';\r\nimport GeoChart from '../components/GeoChart';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Carousel,\r\n  Col,\r\n  Container,\r\n  Dropdown,\r\n  Figure,\r\n  Form,\r\n  ListGroup,\r\n  Row,\r\n  Spinner,\r\n  Table,\r\n  ToggleButton,\r\n} from 'react-bootstrap';\r\nimport logo from '../images/twitter-logo.png';\r\nimport { FaArrowUp, FaThumbsUp, FaThumbsDown } from 'react-icons/fa';\r\nimport MapBox from '../components/MapBox';\r\nimport LineChart from '../components/maps/LineChartJs/LineChart';\r\nimport ComboChart from '../components/maps/ComboChart/ComboChart';\r\nimport GaugeChart from '../components/maps/GaugeChart/GaugeChart';\r\nimport PieChart from '../components/maps/PieChart/PieChart';\r\nimport LineChart2 from '../components/maps/LineChartJs/LineChart2';\r\nimport BarChart from '../components/maps/BarChart/BarChart';\r\nimport LineChart3 from '../components/maps/LineChartJs/LineChart3';\r\nimport IndiaVegetation from '../components/IndiaVegetation';\r\nimport IndiaClimate from '../components/IndiaClimate';\r\nimport CountUp from 'react-countup';\r\nimport ComboChart2 from '../components/maps/ComboChart/ComboChart2';\r\nimport Top5BarChart from '../components/maps/BarChart/Top5BarChart';\r\nimport Bottom5BarChart from '../components/maps/BarChart/Bottom5BarChart';\r\n\r\nconst localUrl = 'http://127.0.0.1:5000/';\r\nconst hostedUrl = 'https://ey-flask-app.herokuapp.com/';\r\n\r\nfunction MapPage() {\r\n  const [normalSelected, setNormalSelected] = useState(true);\r\n\r\n  const [indiaData, setIndiaData] = useState([]);\r\n  const [dataApi, setDataApi] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [forestCover, setForestCover] = useState([]);\r\n  const [forestData, setForestData] = useState([]);\r\n  const [forestDataArray, setForestDataArray] = useState([]);\r\n  const [rainfall, setRainfall] = useState([]);\r\n  const [aqiParams, setAqiParams] = useState([]);\r\n  const [aqiArr, setAqiArr] = useState([]);\r\n  const [comboChartData, setComboChartData] = useState([]);\r\n  const [comboChartData2, setComboChartData2] = useState([]);\r\n  const [descVal, setDescVal] = useState([]);\r\n  const [top5, setTop5] = useState([]);\r\n  const [bottom5, setBottom5] = useState([]);\r\n  const [topBottomParam, setTopBottomParam] = useState('Annual Rainfall');\r\n  const [topBottomYear, setTopBottomYear] = useState(2015);\r\n  const [stateApi, setStateApi] = useState({});\r\n  const [tweetNRating, setTweetNRating] = useState(null);\r\n  const [comboData2Year, setComboData2Year] = useState(2015);\r\n\r\n  const [inputYear, setInputYear] = useState(2022);\r\n  const [inputArea, setInputArea] = useState('India');\r\n  const [predictedResult, setPredictedResult] = useState(665688.922946932);\r\n\r\n  const [hashtag, setHashtag] = useState('forest cover');\r\n\r\n  const [view, setView] = useState('Normal View');\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch(hostedUrl, {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    // console.log(data.Data);\r\n\r\n    setYears(Object.keys(data.Data));\r\n\r\n    setForestCover(\r\n      years.map((item) => data.Data[item]['Total Forest Cover Area'])\r\n    );\r\n\r\n    const annualRainfall = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Annual Rainfall'],\r\n    ]);\r\n\r\n    setRainfall(annualRainfall.filter((item) => item[1] !== 0));\r\n\r\n    setDataApi([data.Data]);\r\n\r\n    const forestObj = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year,\r\n        TFC: data.Data[year]['Total Forest Cover Area'],\r\n        VDC: data.Data[year]['Very Dense Forest Area'],\r\n        MDC: data.Data[year]['Moderately Dense Forest Area'],\r\n        MFC: data.Data[year]['Mangrove Forest Area'],\r\n        OFA: data.Data[year]['Open Forest Area'],\r\n        SLA: data.Data[year]['Scrub Land Area'],\r\n      };\r\n    });\r\n\r\n    // console.log(forestObj);\r\n\r\n    const forestArr = Object.keys(data.Data).map((year) => {\r\n      return [\r\n        year,\r\n        data.Data[year]['Total Forest Cover Area'],\r\n        data.Data[year]['Very Dense Forest Area'],\r\n        data.Data[year]['Moderately Dense Forest Area'],\r\n        data.Data[year]['Mangrove Forest Area'],\r\n        data.Data[year]['Open Forest Area'],\r\n        data.Data[year]['Scrub Land Area'],\r\n      ];\r\n    });\r\n\r\n    // console.log(forestObj);\r\n    setForestData(forestObj);\r\n\r\n    setForestDataArray(forestArr);\r\n\r\n    const aqiVal = {\r\n      year: 2015,\r\n      SO2: data.Data['2015']['SO2'],\r\n      NO2: data.Data['2015']['NO2'],\r\n      RSPM: data.Data['2015']['RSPM'],\r\n      SPM: data.Data['2015']['SPM'],\r\n      PM25: data.Data['2015']['PM25'],\r\n    };\r\n\r\n    const aqiValArr = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year: year,\r\n        SO2: data.Data[year]['SO2'],\r\n        NO2: data.Data[year]['NO2'],\r\n        RSPM: data.Data[year]['RSPM'],\r\n        SPM: data.Data[year]['SPM'],\r\n        PM25: data.Data[year]['PM25'],\r\n      };\r\n    });\r\n\r\n    setAqiParams(aqiVal);\r\n\r\n    // aqiValArr.forEach((val, idx) => console.log(aqiValArr[idx].year));\r\n\r\n    // console.log(aqiValArr);\r\n\r\n    setAqiArr(aqiValArr);\r\n\r\n    const comboData = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Total Forest Cover Area'],\r\n      data.Data[year]['N_Annual_Rainfall'],\r\n      data.Data[year]['N_SPM'],\r\n    ]);\r\n\r\n    // console.log(comboData);\r\n    setComboChartData(comboData);\r\n  };\r\n\r\n  const stateData = async (year) => {\r\n    const formData = new FormData();\r\n    formData.append('year', year);\r\n\r\n    const response = await fetch(`${hostedUrl}state`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    console.log(data);\r\n    setStateApi(data);\r\n\r\n    updateStackedData(data);\r\n  };\r\n\r\n  const stateComboData = async (year) => {\r\n    const formData = new FormData();\r\n    formData.append('year', year);\r\n\r\n    const response = await fetch(`${hostedUrl}state`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    const comboData = Object.keys(data)\r\n      .filter((state) => state !== 'India')\r\n      .map((state) => [\r\n        state,\r\n        data[state]['Total Forest Cover Area'],\r\n        data[state]['Annual Rainfall'],\r\n        data[state]['SO2'],\r\n        data[state]['Open Forest Area'],\r\n      ]);\r\n\r\n    setComboChartData2(comboData);\r\n  };\r\n\r\n  const updateStackedData = (data, param = 'Annual Rainfall') => {\r\n    // console.log('clicked here');\r\n    console.log(data, param);\r\n\r\n    const sortData = Object.keys(data)\r\n      .filter((state) => state !== 'India')\r\n      .map((state) => {\r\n        return [state, data[state][param]];\r\n      });\r\n\r\n    // console.log(sortData);\r\n\r\n    const sortedData = [...sortData];\r\n\r\n    sortedData.sort((a, b) => b[1] - a[1]);\r\n\r\n    // console.log(sortedData);\r\n    // console.log(sortedData[sortedData.length - 5]);\r\n\r\n    setTop5(sortedData.slice(0, 5));\r\n    setBottom5(sortedData.slice(sortedData.length - 5));\r\n\r\n    // console.log(sortedData.slice(0, 5));\r\n    // console.log(sortedData.slice(sortedData.length - 5));\r\n  };\r\n\r\n  const getTweetRating = async () => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('tag', hashtag);\r\n\r\n    const response = await fetch(`${hostedUrl}rating`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    const data = await response.json();\r\n    // console.log(data);\r\n\r\n    setTweetNRating(data);\r\n  };\r\n\r\n  const onSubmitPostRequest = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('year', inputYear);\r\n    formData.append('area', inputArea);\r\n\r\n    // console.log(inputYear, inputArea);\r\n\r\n    fetch(`${hostedUrl}predict/TFA`, {\r\n      method: 'POST',\r\n      // mode: 'no-cors',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        // Accept: 'application/json',\r\n        // 'Content-Type': 'application/json',\r\n      },\r\n      // body: JSON.stringify({ year: inputYear, area: inputArea }),\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log(data['Result']);\r\n        setPredictedResult(data['Result']);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    getTweetRating();\r\n  }, [dataApi.length]);\r\n\r\n  useEffect(() => {\r\n    console.log(topBottomYear);\r\n    stateData(topBottomYear);\r\n  }, [topBottomYear]);\r\n\r\n  useEffect(() => {\r\n    stateComboData(comboData2Year);\r\n  }, [comboData2Year]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className='main-container' fluid>\r\n        <Row\r\n          style={{ height: '100%' }}\r\n          className='map-page-row map-page-row-top'\r\n        >\r\n          {/* col-left */}\r\n          <Col style={{ height: '100%' }} className='left-col'>\r\n            <Row>\r\n              <Col style={{ height: '100%' }} className='left-container'>\r\n                <div className='left-container__heading'>\r\n                  <h1>\r\n                    <CountUp end={predictedResult} duration={5} delay={8} />\r\n                    sq. km.\r\n                  </h1>\r\n                </div>\r\n                <div className='left-container__top--tags'>\r\n                  <h1>Predicted Forest Cover Area of {inputArea}</h1>\r\n                  <p>by {inputYear}</p>\r\n                </div>\r\n                <div className='left-container__top--stats'>\r\n                  <h1>Forest</h1>\r\n                  <p>Lungs of Earth</p>\r\n                </div>\r\n                <></>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className='prediction-form'>\r\n                  <div className='prediction-input--year'>\r\n                    <label for='input-year'>Year</label>\r\n                    <input\r\n                      type='text'\r\n                      value={inputYear}\r\n                      onChange={(e) => setInputYear(e.target.value)}\r\n                      id='input-year'\r\n                      placeholder='Enter year ...'\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='prediction-input--area'>\r\n                    <label for='input-area'>Area</label>\r\n                    <input\r\n                      type='text'\r\n                      value={inputArea}\r\n                      onChange={(e) => setInputArea(e.target.value)}\r\n                      id='input-area'\r\n                      placeholder='Enter area ...'\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='prediction-input--submit'>\r\n                    <button type='submit' onClick={onSubmitPostRequest}>\r\n                      Go{' '}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          {/* col-middle */}\r\n          <Col\r\n            xs\r\n            lg={6}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              position: 'relative',\r\n            }}\r\n            className='mid-col'\r\n          >\r\n            <div className='map-toggle-buttons'>\r\n              <select\r\n                value={view}\r\n                onChange={(e) => {\r\n                  // console.log(e.target.value);\r\n                  setView(e.target.value);\r\n                }}\r\n              >\r\n                <option value='Normal View'>Normal View</option>\r\n                <option value='Satellite View'>Satellite View</option>\r\n                <option value='Vegetation Timelapse'>\r\n                  Vegetation Timelapse\r\n                </option>\r\n                <option value='Climate Timelapse'>Climate Timelapse</option>\r\n              </select>\r\n            </div>\r\n            <></>\r\n            {view === 'Normal View' && (\r\n              <>\r\n                <GeoChart data={data} />\r\n              </>\r\n            )}\r\n            {view === 'Satellite View' && (\r\n              <>\r\n                <MapBox />\r\n              </>\r\n            )}\r\n            {view === 'Vegetation Timelapse' && (\r\n              <>\r\n                <IndiaVegetation />\r\n              </>\r\n            )}\r\n            {view === 'Climate Timelapse' && (\r\n              <>\r\n                <IndiaClimate />\r\n              </>\r\n            )}\r\n          </Col>\r\n\r\n          {/* col-right */}\r\n          <Col style={{ height: '100%' }} className='right-col'>\r\n            <Row style={{ height: '100%' }}>\r\n              <Col\r\n                style={{ height: '100%', padding: ' 2rem' }}\r\n                className='right-container'\r\n              >\r\n                <Card\r\n                  bg='light'\r\n                  // border='light'\r\n                  style={{\r\n                    width: '100%',\r\n                    border: '1px transparent',\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                  }}\r\n                  className='mb-2 right-container__top box-shadow-main'\r\n                >\r\n                  <Card.Body>\r\n                    {dataApi.length === 0 ? (\r\n                      <>\r\n                        <div\r\n                          className='spinner'\r\n                          style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '100%',\r\n                          }}\r\n                        >\r\n                          <Spinner animation='border' variant='primary' />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <LineChart3\r\n                          dataApi={dataApi}\r\n                          forestCover={forestCover}\r\n                          years={years}\r\n                          forestData={forestDataArray}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n                <Card\r\n                  bg='light'\r\n                  style={{ width: '100%' }}\r\n                  className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n                  // border='light'\r\n                >\r\n                  <Card.Body>\r\n                    {dataApi.length === 0 ? (\r\n                      <>\r\n                        <div\r\n                          className='spinner'\r\n                          style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '100%',\r\n                          }}\r\n                        >\r\n                          <Spinner animation='border' variant='primary' />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <ComboChart comboChartData={comboChartData} />\r\n                      </>\r\n                    )}\r\n\r\n                    <Card.Title></Card.Title>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 3-cards */}\r\n        <Row className='map-page-row map-page-row-mid-1'>\r\n          <Col className='container-card aqi-meter' style={{ padding: '2rem' }}>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles aqi-meter-card'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <GaugeChart aqiParams={aqiParams} aqiArr={aqiArr} />\r\n                  </>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col\r\n            className='container-card land-cover-graph'\r\n            style={{ padding: '2rem' }}\r\n          >\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles land-cover-graph-card'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <PieChart\r\n                      // forestData={forestDataArray}\r\n                      forestDataObject={forestData}\r\n                    />\r\n                  </>\r\n                )}\r\n\r\n                <Card.Title></Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col\r\n            className='container-card rainfall-graph'\r\n            style={{ padding: '2rem' }}\r\n          >\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles rainfall-graph-card'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <LineChart2 rainfall={rainfall} />\r\n                  </>\r\n                )}\r\n\r\n                <Card.Title></Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className='map-page-row'>\r\n          <Col className='container-card' style={{ padding: '2rem' }}>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles combo-chart-card'\r\n              // border='light'\r\n            >\r\n              <Card.Body style={{ height: '40rem' }}>\r\n                <div className='select-dropdowns combo-select-year'>\r\n                  <select\r\n                    value={comboData2Year}\r\n                    onChange={(e) => {\r\n                      setComboData2Year(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value='1987'>1987</option>\r\n                    <option value='1989'>1989</option>\r\n                    <option value='1991'>1991</option>\r\n                    <option value='1993'>1993</option>\r\n                    <option value='1995'>1995</option>\r\n                    <option value='1997'>1997</option>\r\n                    <option value='1999'>1999</option>\r\n                    <option value='2001'>2001</option>\r\n                    <option value='2003'>2003</option>\r\n                    <option value='2005'>2005</option>\r\n                    <option value='2007'>2007</option>\r\n                    <option value='2009'>2009</option>\r\n                    <option value='2011'>2011</option>\r\n                    <option value='2013'>2013</option>\r\n                    <option value='2015'>2015</option>\r\n                    <option value='2017'>2017</option>\r\n                    <option value='2019'>2019</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <ComboChart2 comboChartData={comboChartData2} />\r\n                  </>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row\r\n          className='map-page-row map-page-bottom-row'\r\n          style={{ paddingBottom: '10px' }}\r\n        >\r\n          <Col\r\n            xs\r\n            lg={6}\r\n            className='map-page-bottom-container-1'\r\n            // style={{ marginRight: '5px' }}\r\n          >\r\n            <div\r\n              className='select-dropdowns'\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                width: '100%',\r\n                padding: '0 2rem',\r\n                marginBottom: '15px',\r\n                margin: '0 auto',\r\n              }}\r\n            >\r\n              {/* parameters */}\r\n              <select\r\n                value={topBottomParam}\r\n                onChange={(e) => {\r\n                  console.log(e.target.value);\r\n                  const param = e.target.value;\r\n                  setTopBottomParam(e.target.value);\r\n                  updateStackedData(stateApi, param);\r\n                }}\r\n              >\r\n                <option value='Annual Rainfall'>Annual Rainfall</option>\r\n                <option value='Geographical Area'>Geographical Area</option>\r\n                <option value='Mangrove Forest Area'>\r\n                  Mangrove Forest Area\r\n                </option>\r\n                <option value='Moderately Dense Forest Area'>\r\n                  Moderately Dense Forest Area\r\n                </option>\r\n                <option value='Open Forest Area'>Open Forest Area</option>\r\n                <option value='Scrub Land Area'>Scrub Land Area</option>\r\n                <option value='Total Forest Cover Area'>\r\n                  Total Forest Cover Area\r\n                </option>\r\n                <option value='Very Dense Forest Area'>\r\n                  Very Dense Forest Area\r\n                </option>\r\n              </select>\r\n\r\n              {/* years */}\r\n              <select\r\n                value={topBottomYear}\r\n                onChange={(e) => setTopBottomYear(e.target.value)}\r\n              >\r\n                <option value='1987'>1987</option>\r\n                <option value='1989'>1989</option>\r\n                <option value='1991'>1991</option>\r\n                <option value='1993'>1993</option>\r\n                <option value='1995'>1995</option>\r\n                <option value='1997'>1997</option>\r\n                <option value='1999'>1999</option>\r\n                <option value='2001'>2001</option>\r\n                <option value='2003'>2003</option>\r\n                <option value='2005'>2005</option>\r\n                <option value='2007'>2007</option>\r\n                <option value='2009'>2009</option>\r\n                <option value='2011'>2011</option>\r\n                <option value='2013'>2013</option>\r\n                <option value='2015'>2015</option>\r\n                <option value='2017'>2017</option>\r\n                <option value='2019'>2019</option>\r\n              </select>\r\n            </div>\r\n            <div\r\n              className='top-bottom-cards'\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'space-between',\r\n                // alignItems: 'center',\r\n                width: '100%',\r\n              }}\r\n            >\r\n              <Row\r\n                style={{\r\n                  marginBottom: '1rem',\r\n                  // width: '100%',\r\n                  display: 'flex',\r\n                  justifyContent: 'end',\r\n                  padding: '2rem',\r\n                }}\r\n                className='map-row-bottom-left-container'\r\n              >\r\n                {' '}\r\n                <Card\r\n                  bg='light'\r\n                  style={{ width: '100%' }}\r\n                  className='mb-2 right-container__bottom box-shadow-main global-card-styles map-row-bottom-card'\r\n                  // border='light'\r\n                >\r\n                  <Card.Body>\r\n                    <Top5BarChart data={top5} title={topBottomParam} />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Row>\r\n\r\n              <Row\r\n                className='map-row-bottom-left-container'\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'end',\r\n                  padding: '2rem',\r\n                }}\r\n              >\r\n                {' '}\r\n                <Card\r\n                  bg='light'\r\n                  style={{\r\n                    width: '100%',\r\n                  }}\r\n                  className='right-container__bottom box-shadow-main global-card-styles map-row-bottom-card'\r\n                  // border='light'\r\n                >\r\n                  <Card.Body>\r\n                    <Bottom5BarChart data={bottom5} title={topBottomParam} />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col\r\n            xs\r\n            lg={6}\r\n            className='map-page-bottom-container-2'\r\n            style={{ padding: '2rem' }}\r\n          >\r\n            {' '}\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='right-container__bottom box-shadow-main global-card-styles map-row-bottom-card'\r\n              // border='light'\r\n            >\r\n              <Card.Title\r\n                style={{\r\n                  marginTop: '1rem',\r\n                  textAlign: 'center',\r\n                  fontSize: '2rem',\r\n                  fontWeight: '700',\r\n                }}\r\n              >\r\n                <img\r\n                  src={logo}\r\n                  alt='twitter-logo'\r\n                  style={{ height: '30px', width: '30px' }}\r\n                />\r\n                Tweet Sentiment Analysis\r\n              </Card.Title>\r\n              <Card.Body>\r\n                <div\r\n                  className='twitter-form'\r\n                  style={{\r\n                    marginBottom: '1rem',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between',\r\n                  }}\r\n                >\r\n                  <Form.Control\r\n                    size='lg'\r\n                    type='text'\r\n                    placeholder='#Hashtag'\r\n                    style={{ width: '80%', marginRight: '2rem' }}\r\n                    value={hashtag}\r\n                    onChange={(e) => setHashtag(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    variant='primary'\r\n                    type='submit'\r\n                    style={{ height: '100%' }}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      // getTweetRating();\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n\r\n                <ListGroup as='ol'>\r\n                  {tweetNRating !== null &&\r\n                    Object.keys(tweetNRating).map((tweet) => {\r\n                      if (tweetNRating[tweet] === 'Positive') {\r\n                        return (\r\n                          <>\r\n                            <ListGroup.Item\r\n                              as='li'\r\n                              style={{\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                alignItems: 'center',\r\n                              }}\r\n                            >\r\n                              <div className='tweet'>\r\n                                <p> {tweet}</p>\r\n                              </div>\r\n\r\n                              <div className='tweet-icon'>\r\n                                <FaThumbsUp\r\n                                  style={{\r\n                                    height: '15px',\r\n                                    width: '15px',\r\n                                    color: 'green',\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                            </ListGroup.Item>\r\n                          </>\r\n                        );\r\n                      }\r\n\r\n                      return (\r\n                        <>\r\n                          <ListGroup.Item\r\n                            as='li'\r\n                            style={{\r\n                              display: 'flex',\r\n                              justifyContent: 'space-between',\r\n                              alignItems: 'center',\r\n                            }}\r\n                          >\r\n                            <div className='tweet'>\r\n                              <p> {tweet}</p>\r\n                            </div>\r\n\r\n                            <div className='tweet-icon'>\r\n                              <FaThumbsDown\r\n                                style={{\r\n                                  height: '15px',\r\n                                  width: '15px',\r\n                                  color: 'red',\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </ListGroup.Item>\r\n                        </>\r\n                      );\r\n                    })}\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MapPage;\r\n","import React from 'react';\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport './NavBar.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction NavBar() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg='light'\r\n        variant='light'\r\n        className='navbar-nav greenary-nav'\r\n        sticky='top'\r\n      >\r\n        <Container>\r\n          <div className='greenary-logo' onClick={() => navigate(`/`)}>\r\n            GeoSis\r\n          </div>\r\n          {/* <div className='greenary-dropdown-menu'>\r\n            <Navbar.Toggle aria-controls='navbar-dark-example' />\r\n            <Navbar.Collapse\r\n              id='navbar-dark-example'\r\n              className='dropdown-menu-container'\r\n            >\r\n              <Nav className='dropdown'>\r\n                <NavDropdown\r\n                  id='nav-dropdown-dark-example'\r\n                  title='State / UTs'\r\n                  menuVariant='dark'\r\n                  className='dropdown-item-container'\r\n                  style={{ width: '100% !important' }}\r\n                >\r\n                  <NavDropdown.Item href='#action/3.1'>Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href='#action/3.2'>\r\n                    Another action\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item href='#action/3.3'>\r\n                    Something\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href='#action/3.4'>\r\n                    Separated link\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </div> */}\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/gujarat_climate.50d98e75.gif\";","import React from 'react';\r\nimport logo from '../../images/gujarat_climate.gif';\r\n\r\nfunction GujaratClimate() {\r\n  //   let logo = require('/images/india_Climate.gif');\r\n\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      <img\r\n        src={logo}\r\n        alt='gujarat Climate'\r\n        style={{ width: '100%', height: '100%' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GujaratClimate;\r\n","export default __webpack_public_path__ + \"static/media/gujarat_vegetation.28bf227e.gif\";","import React from 'react';\r\nimport logo from '../../images/gujarat_vegetation.gif';\r\n\r\nfunction GujaratVegetation() {\r\n  //   let logo = require('/images/india_vegetation.gif');\r\n\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      <img\r\n        src={logo}\r\n        alt='gujarat vegetation'\r\n        style={{ width: '100%', height: '100%' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GujaratVegetation;\r\n","export default __webpack_public_path__ + \"static/media/tamil_nadu_vegetation.543a26a0.gif\";","import React from 'react';\r\nimport logo from '../../images/tamil_nadu_vegetation.gif';\r\n\r\nfunction TamilNaduVegetation() {\r\n  //   let logo = require('/images/india_Vegetation.gif');\r\n\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      <img\r\n        src={logo}\r\n        alt='TamilNadu Vegetation'\r\n        style={{ width: '100%', height: '100%' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TamilNaduVegetation;\r\n","export default __webpack_public_path__ + \"static/media/himachal_pradesh_climate.47142b1a.gif\";","import React from 'react';\r\nimport logo from '../../images/himachal_pradesh_climate.gif';\r\n\r\nfunction HimachalPradeshClimate() {\r\n  //   let logo = require('/images/india_Climate.gif');\r\n\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      <img\r\n        src={logo}\r\n        alt='Himachal Pradesh Climate'\r\n        style={{ width: '100%', height: '100%' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HimachalPradeshClimate;\r\n","export default __webpack_public_path__ + \"static/media/tamil_nadu_climate.5801fb24.gif\";","import React from 'react';\r\nimport logo from '../../images/tamil_nadu_climate.gif';\r\n\r\nfunction TamilNaduClimate() {\r\n  //   let logo = require('/images/india_Climate.gif');\r\n\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      <img\r\n        src={logo}\r\n        alt='TamilNadu Climate'\r\n        style={{ width: '100%', height: '100%' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TamilNaduClimate;\r\n","export default __webpack_public_path__ + \"static/media/himachal_pradesh_vegetation.c8b1dbc2.gif\";","import React from 'react';\r\nimport logo from '../../images/himachal_pradesh_vegetation.gif';\r\n\r\nfunction HimachalPradeshVegetation() {\r\n  //   let logo = require('/images/india_Vegetation.gif');\r\n\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      <img\r\n        src={logo}\r\n        alt='Himachal Pradesh Vegetation'\r\n        style={{ width: '100%', height: '100%' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HimachalPradeshVegetation;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\n// import data from '../india.min.geo.json';\r\nimport GeoChart from '../components/GeoChart';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Carousel,\r\n  Col,\r\n  Container,\r\n  Figure,\r\n  Row,\r\n  Spinner,\r\n  Table,\r\n  ToggleButton,\r\n} from 'react-bootstrap';\r\nimport { FaArrowUp } from 'react-icons/fa';\r\nimport MapBox from '../components/MapBox';\r\nimport LineChart from '../components/maps/LineChartJs/LineChart';\r\nimport ComboChart from '../components/maps/ComboChart/ComboChart';\r\nimport GaugeChart from '../components/maps/GaugeChart/GaugeChart';\r\nimport PieChart from '../components/maps/PieChart/PieChart';\r\nimport LineChart2 from '../components/maps/LineChartJs/LineChart2';\r\nimport BarChart from '../components/maps/BarChart/BarChart';\r\nimport LineChart3 from '../components/maps/LineChartJs/LineChart3';\r\nimport { useParams } from 'react-router-dom';\r\nimport IndiaVegetation from '../components/IndiaVegetation';\r\nimport IndiaClimate from '../components/IndiaClimate';\r\nimport CountUp from 'react-countup';\r\n\r\nimport GujaratClimate from '../components/gifMaps/GujaratClimate';\r\nimport GujaratVegetation from '../components/gifMaps/GujaratVegetation';\r\nimport TamilNaduVegetation from '../components/gifMaps/TamilNaduVegetation';\r\nimport HimachalPradeshClimate from '../components/gifMaps/HimachalPradeshClimate';\r\nimport TamilNaduClimate from '../components/gifMaps/TamilNaduClimate';\r\nimport HimachalPradeshVegetation from '../components/gifMaps/HimachalPradeshVegetation';\r\n\r\nconst localUrl = 'http://127.0.0.1:5000/';\r\nconst hostedUrl = 'https://ey-flask-app.herokuapp.com/';\r\n\r\nfunction StatesPage() {\r\n  const params = useParams();\r\n\r\n  const data = require(`../geojson/${params.state.toLowerCase()}.geo.json`);\r\n\r\n  const [normalSelected, setNormalSelected] = useState(true);\r\n\r\n  const [indiaData, setIndiaData] = useState([]);\r\n  const [dataApi, setDataApi] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [forestCover, setForestCover] = useState([]);\r\n  const [forestData, setForestData] = useState([]);\r\n  const [forestDataArray, setForestDataArray] = useState([]);\r\n  const [rainfall, setRainfall] = useState([]);\r\n  const [aqiParams, setAqiParams] = useState([]);\r\n  const [aqiArr, setAqiArr] = useState([]);\r\n  const [comboChartData, setComboChartData] = useState([]);\r\n  const [inputYear, setInputYear] = useState(2022);\r\n  const [inputArea, setInputArea] = useState('India');\r\n  const [predictedResult, setPredictedResult] = useState(665688.922946932);\r\n\r\n  const [view, setView] = useState('Normal View');\r\n\r\n  const ComponentVegetation = `${params.state\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n    .join('')}Vegetation`;\r\n\r\n  const ComponentClimate = `${params.state\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n    .join('')}Climate`;\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch(`${hostedUrl}${params.state}`, {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await response.json();\r\n\r\n    console.log(data.Data);\r\n\r\n    setYears(Object.keys(data.Data));\r\n\r\n    setForestCover(\r\n      years.map((item) => data.Data[item]['Total Forest Cover Area'])\r\n    );\r\n\r\n    const annualRainfall = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Annual Rainfall'],\r\n    ]);\r\n\r\n    setRainfall(annualRainfall.filter((item) => item[1] !== 0));\r\n\r\n    setDataApi([data.Data]);\r\n\r\n    const forestObj = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year,\r\n        TFC: data.Data[year]['Total Forest Cover Area'],\r\n        VDC: data.Data[year]['Very Dense Forest Area'],\r\n        MDC: data.Data[year]['Moderately Dense Forest Area'],\r\n        MFC: data.Data[year]['Mangrove Forest Area'],\r\n        OFA: data.Data[year]['Open Forest Area'],\r\n        SLA: data.Data[year]['Scrub Land Area'],\r\n      };\r\n    });\r\n\r\n    // console.log(forestObj);\r\n\r\n    const forestArr = Object.keys(data.Data).map((year) => {\r\n      return [\r\n        year,\r\n        data.Data[year]['Total Forest Cover Area'],\r\n        data.Data[year]['Very Dense Forest Area'],\r\n        data.Data[year]['Moderately Dense Forest Area'],\r\n        data.Data[year]['Mangrove Forest Area'],\r\n        data.Data[year]['Open Forest Area'],\r\n        data.Data[year]['Scrub Land Area'],\r\n      ];\r\n    });\r\n\r\n    // console.log(forestObj);\r\n    setForestData(forestObj);\r\n\r\n    setForestDataArray(forestArr);\r\n\r\n    const aqiVal = {\r\n      year: 2015,\r\n      SO2: data.Data['2015']['SO2'],\r\n      NO2: data.Data['2015']['NO2'],\r\n      RSPM: data.Data['2015']['RSPM'],\r\n      SPM: data.Data['2015']['SPM'],\r\n      PM25: data.Data['2015']['PM25'],\r\n    };\r\n\r\n    const aqiValArr = Object.keys(data.Data).map((year) => {\r\n      return {\r\n        year: year,\r\n        SO2: data.Data[year]['SO2'],\r\n        NO2: data.Data[year]['NO2'],\r\n        RSPM: data.Data[year]['RSPM'],\r\n        SPM: data.Data[year]['SPM'],\r\n        PM25: data.Data[year]['PM25'],\r\n      };\r\n    });\r\n\r\n    setAqiParams(aqiVal);\r\n\r\n    // aqiValArr.forEach((val, idx) => console.log(aqiValArr[idx].year));\r\n\r\n    console.log(aqiValArr);\r\n\r\n    setAqiArr(aqiValArr);\r\n\r\n    const comboData = Object.keys(data.Data).map((year) => [\r\n      year,\r\n      data.Data[year]['Total Forest Cover Area'],\r\n      data.Data[year]['N_Annual_Rainfall'],\r\n      data.Data[year]['N_SPM'],\r\n    ]);\r\n\r\n    // console.log(comboData);\r\n    setComboChartData(comboData);\r\n\r\n    // const aqiVal =\r\n\r\n    // console.log(aqiVal);\r\n\r\n    // console.log(aqiVal[1][1]);\r\n  };\r\n\r\n  const onSubmitPostRequest = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('year', inputYear);\r\n    formData.append('area', inputArea);\r\n\r\n    console.log(inputYear, inputArea);\r\n\r\n    fetch(`${hostedUrl}TFA`, {\r\n      method: 'POST',\r\n      // mode: 'no-cors',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        // Accept: 'application/json',\r\n        // 'Content-Type': 'application/json',\r\n      },\r\n      // body: JSON.stringify({ year: inputYear, area: inputArea }),\r\n      body: formData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data['Result']);\r\n        setPredictedResult(data['Result']);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [dataApi.length]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container className='main-container' fluid>\r\n        <Row\r\n          style={{ height: '100%' }}\r\n          className='map-page-row map-page-row-top'\r\n        >\r\n          {/* col-left */}\r\n          <Col style={{ height: '100%' }} className='left-col'>\r\n            <Row>\r\n              <Col style={{ height: '100%' }} className='left-container'>\r\n                <div className='left-container__heading'>\r\n                  <h1>\r\n                    <CountUp end={predictedResult} duration={5} delay={8} />\r\n                    sq. km.\r\n                  </h1>\r\n                </div>\r\n                <div className='left-container__top--tags'>\r\n                  <h1>Predicted Forest Cover Area of {inputArea}</h1>\r\n                  <p>by {inputYear}</p>\r\n                </div>\r\n                <div className='left-container__top--stats'>\r\n                  <h1>Forest</h1>\r\n                  <p>Lungs of Earth</p>\r\n                </div>\r\n                <></>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className='prediction-form'>\r\n                  <div className='prediction-input--year'>\r\n                    <label for='input-year'>Year</label>\r\n                    <input\r\n                      type='text'\r\n                      value={inputYear}\r\n                      onChange={(e) => setInputYear(e.target.value)}\r\n                      id='input-year'\r\n                      placeholder='Enter year ...'\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='prediction-input--area'>\r\n                    <label for='input-area'>Area</label>\r\n                    <input\r\n                      type='text'\r\n                      value={inputArea}\r\n                      onChange={(e) => setInputArea(e.target.value)}\r\n                      id='input-area'\r\n                      placeholder='Enter area ...'\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='prediction-input--submit'>\r\n                    <button type='submit' onClick={onSubmitPostRequest}>\r\n                      Go{' '}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          {/* col-middle */}\r\n          <Col\r\n            xs\r\n            lg={6}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              justifyContent: 'center',\r\n              position: 'relative',\r\n            }}\r\n            className='mid-col'\r\n          >\r\n            <div className='map-toggle-buttons'>\r\n              {/* <Button\r\n              variant='primary'\r\n              onClick={() => setNormalSelected(true)}\r\n              // onClick={(e) => console.log('Clicked')}\r\n            >\r\n              Normal View\r\n            </Button>\r\n            <Button\r\n              variant='secondary'\r\n              onClick={(e) => setNormalSelected(false)}\r\n            >\r\n              Satellite View\r\n            </Button> */}\r\n              {/* <Button\r\n              variant='primary'\r\n              onClick={() => setNormalSelected(true)}\r\n              // onClick={(e) => console.log('Clicked')}\r\n            >\r\n              Normal View\r\n            </Button>\r\n            <Button\r\n              variant='secondary'\r\n              onClick={(e) => setNormalSelected(false)}\r\n            >\r\n              Satellite View\r\n            </Button> */}\r\n              <select\r\n                value={view}\r\n                onChange={(e) => {\r\n                  // console.log(e.target.value);\r\n                  setView(e.target.value);\r\n                }}\r\n              >\r\n                <option value='Normal View'>Normal View</option>\r\n                <option value='Satellite View'>Satellite View</option>\r\n                <option value='Vegetation Timelapse'>\r\n                  Vegetation Timelapse\r\n                </option>\r\n                <option value='Climate Timelapse'>Climate Timelapse</option>\r\n              </select>\r\n            </div>\r\n            <></>\r\n            {view === 'Normal View' && (\r\n              <>\r\n                <GeoChart data={data} />\r\n              </>\r\n            )}\r\n            {view === 'Satellite View' && (\r\n              <>\r\n                <MapBox area={params.state.toLowerCase()} />\r\n              </>\r\n            )}\r\n            {view === 'Vegetation Timelapse' && (\r\n              <>\r\n                {params.state.toLowerCase() === 'gujarat' && (\r\n                  <GujaratVegetation />\r\n                )}\r\n                {params.state.toLowerCase() === 'himachal pradhesh' && (\r\n                  <HimachalPradeshVegetation />\r\n                )}\r\n                {params.state.toLowerCase() === 'tamil nadu' && (\r\n                  <TamilNaduVegetation />\r\n                )}\r\n              </>\r\n            )}\r\n            {view === 'Climate Timelapse' && (\r\n              <>\r\n                {params.state.toLowerCase() === 'gujarat' && <GujaratClimate />}\r\n                {params.state.toLowerCase() === 'himachal pradhesh' && (\r\n                  <HimachalPradeshClimate />\r\n                )}\r\n                {params.state.toLowerCase() === 'tamil nadu' && (\r\n                  <TamilNaduClimate />\r\n                )}\r\n              </>\r\n            )}\r\n          </Col>\r\n\r\n          {/* col-right */}\r\n          <Col style={{ height: '100%' }} className='right-col'>\r\n            <Row style={{ height: '100%' }}>\r\n              <Col\r\n                style={{ height: '100%', padding: ' 2rem' }}\r\n                className='right-container'\r\n              >\r\n                <Card\r\n                  bg='light'\r\n                  // border='light'\r\n                  style={{\r\n                    width: '100%',\r\n                    border: '1px transparent',\r\n                    height: '100%',\r\n                    overflow: 'hidden',\r\n                  }}\r\n                  className='mb-2 right-container__top box-shadow-main'\r\n                >\r\n                  <Card.Body>\r\n                    {dataApi.length === 0 ? (\r\n                      <>\r\n                        <div\r\n                          className='spinner'\r\n                          style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '100%',\r\n                          }}\r\n                        >\r\n                          <Spinner animation='border' variant='primary' />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <LineChart3\r\n                          dataApi={dataApi}\r\n                          forestCover={forestCover}\r\n                          years={years}\r\n                          forestData={forestDataArray}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n                <Card\r\n                  bg='light'\r\n                  style={{ width: '100%' }}\r\n                  className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n                  // border='light'\r\n                >\r\n                  <Card.Body>\r\n                    {dataApi.length === 0 ? (\r\n                      <>\r\n                        <div\r\n                          className='spinner'\r\n                          style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            height: '100%',\r\n                          }}\r\n                        >\r\n                          <Spinner animation='border' variant='primary' />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <ComboChart comboChartData={comboChartData} />\r\n                      </>\r\n                    )}\r\n\r\n                    <Card.Title></Card.Title>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 3-cards */}\r\n        <Row className='map-page-row'>\r\n          <Col className='container-card aqi-meter' style={{ padding: '2rem' }}>\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <GaugeChart aqiParams={aqiParams} aqiArr={aqiArr} />\r\n                  </>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col\r\n            className='container-card land-cover-graph'\r\n            style={{ padding: '2rem' }}\r\n          >\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles land-cover-graph-card'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <PieChart\r\n                      // forestData={forestDataArray}\r\n                      forestDataObject={forestData}\r\n                    />\r\n                  </>\r\n                )}\r\n\r\n                <Card.Title></Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col\r\n            className='container-card rainfall-graph'\r\n            style={{ padding: '2rem' }}\r\n          >\r\n            <Card\r\n              bg='light'\r\n              style={{ width: '100%' }}\r\n              className='mb-2 right-container__bottom box-shadow-main global-card-styles rainfall-graph-card'\r\n              // border='light'\r\n            >\r\n              <Card.Body>\r\n                {dataApi.length === 0 ? (\r\n                  <>\r\n                    <div\r\n                      className='spinner'\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '100%',\r\n                      }}\r\n                    >\r\n                      <Spinner animation='border' variant='primary' />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <LineChart2 rainfall={rainfall} />\r\n                  </>\r\n                )}\r\n\r\n                <Card.Title></Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default StatesPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport MapPage from './pages/MapPage';\r\nimport NavBar from './components/NavBar/NavBar';\r\n\r\n// import { Button, Container, Row, Col, Figure } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport StatesPage from './pages/StatesPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <NavBar />\r\n        <div className='wrapper-container'>\r\n          <Routes>\r\n            <Route path='/' exact element={<MapPage />} />\r\n            <Route path='/:state' element={<StatesPage />} />\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}